---
const slides = [
  {
    title: "Transforma tu futuro",
    subtitle: "Descubre nuevas oportunidades con nuestras soluciones digitales",
    buttonText: "Explorar ahora",
    buttonLink: "#",
    imageUrl: "/assets/banner/1.png",
    imageAlt: "Imagen 1",
  },
  {
    title: "Impulsa tu negocio",
    subtitle: "Tecnología que hace crecer tus ideas",
    buttonText: "Conoce más",
    buttonLink: "#",
    imageUrl: "/assets/banner/2.png",
    imageAlt: "Imagen 2",
  },
  {
    title: "Innovación sin límites",
    subtitle: "Creamos soluciones que marcan la diferencia",
    buttonText: "Ver soluciones",
    buttonLink: "#",
    imageUrl: "/assets/banner/3.png",
    imageAlt: "Imagen 3",
  },
];
---

<section class="hero-slider">
  <div class="slider-container">
    <div class="slider" id="slider">
      {
        slides.map((slide) => (
          <div class="slide">
            <div class="slide-content">
              <div class="text">
                <h1>{slide.title}</h1>
                <p>{slide.subtitle}</p>
                <a href={slide.buttonLink} class="hero-button">
                  {slide.buttonText}
                </a>
              </div>
              <div class="image">
                <img src={slide.imageUrl} alt={slide.imageAlt} loading="lazy" />
              </div>
            </div>
          </div>
        ))
      }
    </div>
    <br />

    <div class="dots" id="dots">
      {slides.map((_, i) => <span class="dot" data-index={i} />)}
    </div>
  </div>
</section>
<div class="espacio"></div>

<style>
  .hero-slider {
    position: relative;
    overflow: hidden;
    background-color: #f5f5f5;
    width: 100%;
    padding: 2rem 2rem;
    border-radius: 25px;
  }

  .slider-container {
    position: relative;
    max-width: 1280px;
    margin: 0 auto;
    overflow: hidden;
  }

  .slider {
    display: flex;
    transition: transform 0.8s cubic-bezier(0.77, 0, 0.175, 1);
    /* El ancho se ajustará dinámicamente por JS */
  }

  .slide {
    width: 100%;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
  }

  .slide-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 2rem;
    text-align: center;
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
  }

  .text {
    flex: 1;
    padding: 1rem;
  }

  .text h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
    color: #333;
  }

  .text p {
    font-size: 1.3rem;
    margin-bottom: 1.5rem;
    color: #666;
  }

  .hero-button {
    display: inline-block;
    padding: 0.75rem 1.5rem;
    background-color: var(--color-primario);
    color: white;
    text-decoration: none;
    border-radius: 0.5rem;
    font-weight: bold;
    transition: background-color 0.3s ease;
  }

  .hero-button:hover {
    background-color: var(--color-secundario);
  }

  .image {
    flex: 1;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .image img {
    max-width: 100%;
    height: auto;
    border-radius: 1rem;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  /* Escritorio */
  @media (min-width: 768px) {
    .slide-content {
      flex-direction: row;
      text-align: left;
      gap: 4rem;
    }

    .text,
    .image {
      flex: 1;
    }
  }

  /* Dots */
  .dots {
    position: absolute;
    bottom: 1rem;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 0.5rem;
    z-index: 10;
  }

  .dot {
    width: 12px;
    height: 12px;
    background-color: #ccc;
    border-radius: 50%;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .dot.active {
    background-color: var(--color-primario);
  }
</style>

<script is:inline>
  document.addEventListener("DOMContentLoaded", function () {
    let index = 0;
    const slides = document.querySelectorAll(".slide");
    const totalSlides = slides.length;
    const slider = document.getElementById("slider");
    const dots = document.querySelectorAll(".dot");
    let intervalId;
    const sliderContainer = document.querySelector(".slider-container");

    // Ajustar el ancho del slider dinámicamente
    slider.style.width = `${totalSlides * 100}%`;
    slides.forEach((slide) => {
      slide.style.width = `${100 / totalSlides}%`;
    });

    function showSlide(i) {
      index = i;
      slider.style.transform = `translateX(-${index * (100 / totalSlides)}%)`;
      dots.forEach((dot, idx) => {
        dot.classList.remove("active");
        if (idx === index) {
          dot.classList.add("active");
          dot.setAttribute("aria-current", "true");
        } else {
          dot.removeAttribute("aria-current");
        }
      });
    }

    // Inicializa primer slide
    showSlide(0);

    // Auto slide
    function startSlider() {
      intervalId = setInterval(() => {
        index = (index + 1) % totalSlides;
        showSlide(index);
      }, 5000);
    }
    function stopSlider() {
      clearInterval(intervalId);
    }
    startSlider();

    // Dot navigation
    dots.forEach((dot) => {
      dot.addEventListener("click", () => {
        const i = parseInt(dot.getAttribute("data-index"));
        showSlide(i);
      });
    });

    // Pausar el slider al pasar el mouse
    sliderContainer.addEventListener("mouseenter", stopSlider);
    sliderContainer.addEventListener("mouseleave", startSlider);
  });
</script>
